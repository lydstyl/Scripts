#!/usr/bin/python3.5

"""
Ce script permet, à partir d'un csv,
de créer le ou les fichiers de traduction s'ils n'existent pas et
d'ajouter à la fin du fichier la ligne clé + valeur de traduction.

ATTENTION : faire à la mano : les trad avec des virgules; les clé 
en doublon dans le .csv; les clé présentes sur plusieurs .properties
"""

import os
import csv
from pathlib import Path

# variables à modifier avant de lancer le script
directoryPath = '/home/lyd/csvTradToProperties' #user_input = input('What is the name of your directory')
folder = directoryPath + '/' 
csvFile = folder + 'csv.csv'

directory = os.listdir(directoryPath)
with open(csvFile, newline='') as f:
    reader = csv.reader(f)
    foundedFrPropertiesFileNb = 0
    nbAddedLine = 0
    for row in reader: # pour chaque ligne du csv
        rowTab = row[0].split(';')
        key = rowTab[0]
        searchstring = key #searchstring = input('What word are you trying to find?')
        # création pathTradFile en le cherchant
        foundedFrPropertiesFile = False
        nbFileFound = 0
        for fname in directory:
            if os.path.isfile(directoryPath + os.sep + fname):
                f = open(directoryPath + os.sep + fname, 'r')
                if searchstring in f.read():
                    if "_fr_FR.properties" in fname: 
                        foundedFrPropertiesFile = True
                        foundedFrPropertiesFileNb += 1
                        nlFile = fname.replace('_fr_FR.properties', '_nl_BE.properties') #print('On va ajouter la ligne dans ' + nlFile)
                        nbFileFound += 1
                        #break
                #else:
                    #print('string not found')
                f.close()
        if nbFileFound > 1:
            print('Cle trouvé dans + de 1 fichier à faire mano : ' + key)
        if not foundedFrPropertiesFile:
            print(key + 'NOT FOUND IN A fr_FR PROPERTIES FILE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')
        pathTradFile = folder + nlFile
        # il y a des fichiers tel que email, forms, common, locale, account, content, components etc..
        tradNl = rowTab[1]
        line = key + ' = ' + tradNl
        my_file = Path(pathTradFile)
        if not my_file.is_file():
            open(pathTradFile, 'a').close()

        # with open(pathTradFile, 'a') as file:
        #print(str(key))
        #if key == 'search.nohits.header                      ':
            # print('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')
        file = open(pathTradFile, 'a')
        # test = 'gbTest3.search.nohits.header      =  We vonden geen enkel product dat overeenstemt met uw criteria. Breid uw zoekcriteria uit of duid een andere categorie aan.'
        toBeWriten = line # or line
        # print('ajout de : ' + toBeWriten)
        # print(pathTradFile)
        file.write('\n' + toBeWriten + '\n')
        file.close()
        nbAddedLine += 1

        #on enlève les duplicates
            # lines = open(pathTradFile, 'r').readlines()
            # lines_set = set(lines)
            # out  = open(pathTradFile, 'w')
            # for line in lines_set:
            #     out.write(line)
        
print('\n\nJob finished :)\n\nNombre de foundedFrPropertiesFile ' + str(foundedFrPropertiesFileNb) + '\net nombre de addedLine ' + str(nbAddedLine))